name: Build Release APK

on:
  push:
    branches: master
    tags:
      - v*

jobs:
  release_build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Setup JAVA 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle and wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Setup Google Services
        run: echo ${{ secrets.GOOGLE_SERVICES_JSON }} | base64 --decode > ./app/google-services.json

      - name: Set App Version
        run: |
          export BUILD=$(( ($(date +%s) - $(date -d "2022-06-15" +%s)) / 86400 ))
          sed -i "s/versionName.*/versionName \"${GITHUB_REF_NAME#v}\"/" app/build.gradle
          sed -i "s/versionCode.*/versionCode ${BUILD}/" app/build.gradle

      #1     
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
          SIGNING_KEY_STORE_PATH: app/keystore.jks

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > $SIGNING_KEY_STORE_PATH

      #2
      - name: Build Release apk
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Build Release bundle
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew bundleRelease
      #3
      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: |
            app/build/outputs/apk/release/
            app/build/outputs/bundle/release/
      #4
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          prerelease: true
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/bundle/release/app-release.aab